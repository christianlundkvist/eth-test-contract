# Simple on-chain wallet that allows sending to name defined in an
# external name registry contract. Demonstrates contracts calling
# other contracts with return values.

data owner
data namereg_addr

extern namereg: [get_owner:i:i, get_value:i:i, register:i:_, set_value:ii:_, transfer_ownership:ii:_]

def init():
    self.owner = msg.sender

def set_namereg(namereg_addr):
    if msg.sender == self.owner:
        self.namereg_addr = namereg_addr

def send_to_addr(addr, value):
    if msg.sender == self.owner:
        if value <= self.balance:
            send(addr, value)

def send_to_name(name, value):
    if msg.sender == self.owner:
        if value <= self.balance:
            addr = self.namereg_addr.get_value(name)
            send(addr, value)

def transfer_ownership(new_owner):
    if msg.sender == self.owner:
        self.owner = new_owner
